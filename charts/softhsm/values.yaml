# Default values for softhsm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## TODO: Multiple replicas are not supported 'cause AWS EBS gp2 storage class does not support ReadWriteMany
replicaCount: 1

image:
  repository: mosipqa/softhsm
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

commonAnnotations: {}

podAnnotations: {}

podSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsGroup: 2001
  fsGroup: 3001

containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

containerPort: 5666

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 1500Mi
  requests:
    cpu: 100m
    memory: 750Mi

additionalResources:
  ## Specify any JAVA_OPTS string here. These typically will be specified in conjunction with above resources
  ## Example: java_opts: "-Xms500M -Xmx500M"
  javaOpts: "-Xms750M -Xmx750M"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  enabled: true
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack).
  ##
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  ## ReadWriteMany not supported by AWS gp2
  storageClass:
  accessModes:
    - ReadWriteOnce
  size: 10M
  existingClaim:
  # Dir where config and keys are written inside container
  mountDir: /softhsm

## Configure extra options for startup, liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
startupProbe:
  enabled: true
  tcpSocket:
    port: tcp
  initialDelaySeconds: 0
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 10
  successThreshold: 1

readinessProbe:
  enabled: true
  tcpSocket:
    port: tcp
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

livenessProbe:
  enabled: true
  tcpSocket:
    port: tcp
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## Numbers.  If not specified a random PIN is assigned.
securityPIN: ""

## Softhhsm conf file that must be mounted inside softhsm container
configuration: |-
  # SoftHSM v2 configuration file
  directories.tokendir = /softhsm/tokens/
  objectstore.backend = file
  # ERROR, WARNING, INFO, DEBUG
  log.level = ERROR
  # If CKF_REMOVABLE_DEVICE flag should be set
  slots.removable = false
  # Enable and disable PKCS#11 mechanisms using slots.mechanisms.
  slots.mechanisms = ALL
  # If the library should reset the state on fork
  library.reset_on_fork = false
