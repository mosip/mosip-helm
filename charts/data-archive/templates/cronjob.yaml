apiVersion: {{ include "common.capabilities.cronjob.apiVersion" $ }}
kind: CronJob
metadata:
  name: {{ template "data-archive.cronjob" $ }}
  namespace: {{ $.Release.Namespace }}

spec:
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1  # remove jobs which are successfully executed
  failedJobsHistoryLimit: 1      # except 1 recent failed job, remove jobs which are not successfully executed
  #schedule: '*/3 * * * *' # cron spec of time, here, 8 o'clock
  schedule: {{ .Values.crontime }}
  jobTemplate:
    spec:
      backoffLimit: 2 # this has very low chance of failing, as all this does
      # is prompt kubernetes to schedule new replica set for
      # the deployment
      # activeDeadlineSeconds: 600 # timeout, makes most sense with
      # "waiting for rollout" variant specified below
      template:
        spec:       
          restartPolicy: Never
          containers:
            - name: {{ template "data-archive.serviceAccountName" $ }}
              image: {{ template "data-archive.image" $ }}
              imagePullPolicy: {{ $.Values.image.pullPolicy }}
              {{- if $.Values.lifecycleHooks }}
              lifecycle: {{- include "common.tpvalues.render" (dict "value" $.Values.lifecycleHooks "context" $) | nindent 12 }}
              {{- end }}
              {{- if $.Values.containerSecurityContext.enabled }}
              securityContext: {{- omit $.Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
              {{- end }}
              {{- if $.Values.command }}
              command: {{- include "common.tpvalues.render" (dict "value" $.Values.command "context" $) | nindent 12 }}
              {{- end }}
              {{- if $.Values.args }}
              args: {{- include "common.tpvalues.render" (dict "value" $.Values.args "context" $) | nindent 12 }}
              {{- end }}
              env:

                - name: container_user
                  value: {{ $.Values.containerSecurityContext.runAsUser | quote }}                  
                - name: SU_USER_PWD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.database.mosip_archive.su.secret.name }}
                      key: {{ .Values.database.mosip_archive.su.secret.key }}
                - name: DBUSER_PWD
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_AUDIT_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_CREDENTIAL_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_ESIGNET_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_IDA_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_IDREPO_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_KERNEL_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_MASTER_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_PMS_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_REGPRC_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: SOURCE_RESIDENT_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                - name: ARCHIVE_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: db-common-secrets
                      key: db-dbuser-password
                {{- if $.Values.extraEnvVars }}
                {{- include "common.tpvalues.render" (dict "value" $.Values.extraEnvVars "context" $) | nindent 12 }}
                {{- end }}
              envFrom:
                 - configMapRef:
                    name: db-archive-init-env-config