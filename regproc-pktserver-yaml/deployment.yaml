---
# Source: regproc-pktserver/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: regproc-pktserver
    helm.sh/chart: regproc-pktserver-12.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mosip
  name: release-name-regproc-pktserver
  annotations:
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: regproc-pktserver
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: regproc-pktserver
        helm.sh/chart: regproc-pktserver-12.0.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-regproc-pktserver
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: regproc-pktserver
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      initContainers:
      containers:
        - name: regproc-pktserver
          image: docker.io/mosipid/registration-processor-dmz-packet-server:1.1.5.2
          imagePullPolicy: Always
          env:
            - name: container_user
              value: mosip
            - name: JDK_JAVA_OPTIONS
              value: -Xms1000M -Xmx1000M
          envFrom:
            - configMapRef:
                name: global
            - configMapRef:
                name: config-server-share
            - configMapRef:
                name: artifactory-share
          volumeMounts:
            - name: landing-folder
              mountPath: /home/mosip/landing
          ports:
            - name: spring-service
              containerPort: 8082
          resources:
            limits:
              cpu: 500m
              memory: 1250Mi
            requests:
              cpu: 100m
              memory: 100Mi
          startupProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - echo "regproc packet server is up !!!" > /home/mosip/landing/healthcheck.txt;
                url=http://localhost:8082/healthcheck.txt; curl_output="$(curl -w %{http_code}
                -o /dev/null -s $url)"; if ! [ "$curl_output" = "200" ]; then echo "$str failed
                with status code $curl_output" >> /dev/stderr && exit $i; fi;
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthcheck.txt
              port: 8082
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthcheck.txt
              port: 8082
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
      volumes:
        - name: landing-folder
          persistentVolumeClaim:
            claimName: regproc-group1
