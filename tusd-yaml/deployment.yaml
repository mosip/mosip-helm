---
# Source: tusd/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: tusd
    helm.sh/chart: tusd-12.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mosip
  name: release-name-tusd
  annotations:
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tusd
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: tusd
        helm.sh/chart: tusd-12.0.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-tusd-foo
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tusd
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      initContainers:
        - name: volume-permissions
          image: docker.io/bitnami/bitnami-shell:10
          imagePullPolicy: "Always"
          command: []
          securityContext:
            runAsUser: 0
          resources:
            limits: {}
            requests: {}
          #volumeMounts:
          #  - name: foo
          #    mountPath: bar
      containers:
        - name: tusd
          image: docker.io/mosipdev/tusd-server:develop
          imagePullPolicy: Always
          env:
            - name: auth_url_env
              value: 'http://authmanager.kernel'
            - name: key_url_env
              value: 'http://keymanager.keymanager'
          envFrom:
              - configMapRef:
                  name: config-server-share
          volumeMounts:
            - name: tusd
              mountPath: /mnt/tusd/srv/tusd-hooks/
            - name: conf-file
              mountPath: /srv/tusd-hooks/

          ports:
            - name: container-port
              containerPort: 1080
          resources:
            limits: {}
            requests:
              cpu: 100m
              memory: 1500Mi
          startupProbe:
            failureThreshold: 10
            httpGet:
              port: 1080
            initialDelaySeconds: 0
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            failureThreshold: 2
            httpGet:
              port: 1080
            initialDelaySeconds: 20
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 2
            httpGet:
              port: 1080
            initialDelaySeconds: 0
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
      volumes:
        - name: tusd
          configMap:
            name: release-name-tusd
        - name: conf-file
          persistentVolumeClaim:
            claimName: release-name-tusd
