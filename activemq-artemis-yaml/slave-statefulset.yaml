---
# Source: activemq-artemis/templates/slave-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-activemq-artemis-slave
  annotations:
    {}
  labels:
    app: activemq-artemis
    chart: activemq-artemis-12.0.2
    heritage: "Helm"
    release: "release-name"
spec:
  serviceName: release-name-activemq-artemis-slave
  replicas: 1
  podManagementPolicy: "Parallel"
  revisionHistoryLimit: 10
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: activemq-artemis
      release: "release-name"    
      component: slave
  template:
    metadata:
      name: release-name-activemq-artemis
      annotations:
        {}
      labels:
        app: activemq-artemis
        release: "release-name"
        component: slave
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      imagePullSecrets: []
      initContainers:
      - name: configure-cluster
        image: docker.io/mosipqa/activemq-artemis:1.1.5
        imagePullPolicy: "Always"
        command: ["/bin/sh", "/opt/configure-slave/configure-cluster.sh"]
        volumeMounts:
          - name: config-override
            mountPath: /var/lib/artemis/etc-override
          - name: configure-common
            mountPath: /opt/configure-common
          - name: configure-slave
            mountPath: /opt/configure-slave
      containers:
      - name: release-name-activemq-artemis
        image: docker.io/mosipqa/activemq-artemis:1.1.5
        imagePullPolicy: "Always"
        resources:
          limits:
            cpu: 2000m
            memory: 8000Mi
          requests:
            cpu: 200m
            memory: 512Mi
        env:
        - name: ARTEMIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: release-name-activemq-artemis
              key: artemis-password
        - name: ARTEMIS_USERNAME
          value: "artemis"
        - name: ARTEMIS_PERF_JOURNAL
          value: "AUTO"
        - name: ENABLE_JMX_EXPORTER
          value: "true"
        ports:
        - name: http
          containerPort: 8161
        - name: core
          containerPort: 61616
        - name: amqp
          containerPort: 5672
        - name: jmxexporter
          containerPort: 9404
        livenessProbe:
          httpGet:
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 4
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command:
            - "/bin/netcat"
            - "-z"
            - "localhost"
            - "61616"
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 4
          timeoutSeconds: 10
        startupProbe:
          exec:
            command:
            - "/bin/netcat"
            - "-z"
            - "localhost"
            - "61616"
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 4
          timeoutSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /var/lib/artemis/data
        - name: config-override
          mountPath: /var/lib/artemis/etc-override
        - name: configure-common
          mountPath: /opt/configure-common
        - name: configure-slave
          mountPath: /opt/configure-slave
      volumes:
      - name: config-override
        emptyDir: {}
      - name: configure-common
        configMap:
          name: release-name-activemq-artemis-configure-common
      - name: configure-slave
        configMap:
          name: release-name-activemq-artemis-configure-slave
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: 
      resources:
        requests:
          storage: 8Gi
