---
# Source: regproc-group5/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: regproc-group5
    helm.sh/chart: regproc-group5-12.0.2
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: mosip
  name: release-name-regproc-group5
  annotations:
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: regproc-group5
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/name: regproc-group5
        helm.sh/chart: regproc-group5-12.0.2
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-regproc-group5
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: regproc-group5
                    app.kubernetes.io/instance: release-name
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      initContainers:
      containers:
        - name: regproc-group5
          image: docker.io/mosipqa/registration-processor-stage-group-5:develop
          imagePullPolicy: Always
          env:
            - name: container_user
              value: mosip
            - name: JDK_JAVA_OPTIONS
              value: -Xms3000M -Xmx3000M
          envFrom:
            - configMapRef:
                name: global
            - configMapRef:
                name: config-server-share
            - configMapRef:
                name: artifactory-share
          ports: []
          resources:
            limits:
              cpu: 500m
              memory: 4000Mi
            requests:
              cpu: 100m
              memory: 1000Mi
          startupProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - MY_PROBE_CHECK_PATHS="http://localhost:8088/registrationprocessor/v1/packetvalidator/actuator/health,http://localhost:8089/registrationprocessor/v1/cmdvalidator/actuator/health,http://localhost:8093/registrationprocessor/v1/operatorvalidator/actuator/health,http://localhost:8094/registrationprocessor/v1/supervisorvalidator/actuator/health,http://localhost:8095/registrationprocessor/v1/introducervalidator/actuator/health";
                i=1; for str in $(echo $MY_PROBE_CHECK_PATHS | sed "s/,/\n/g"); do curl_output="$(curl
                -w %{http_code} -o /dev/null -s $str)"; if ! [ "$curl_output" = "200" ]; then
                echo "$str failed with status code $curl_output" >> /dev/stderr && exit $i; fi;
                ((i++)); done
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - MY_PROBE_CHECK_PATHS="http://localhost:8088/registrationprocessor/v1/packetvalidator/actuator/health,http://localhost:8089/registrationprocessor/v1/cmdvalidator/actuator/health,http://localhost:8093/registrationprocessor/v1/operatorvalidator/actuator/health,http://localhost:8094/registrationprocessor/v1/supervisorvalidator/actuator/health,http://localhost:8095/registrationprocessor/v1/introducervalidator/actuator/health";
                i=1; for str in $(echo $MY_PROBE_CHECK_PATHS | sed "s/,/\n/g"); do curl_output="$(curl
                -w %{http_code} -o /dev/null -s $str)"; if ! [ "$curl_output" = "200" ]; then
                echo "$str failed with status code $curl_output" >> /dev/stderr && exit $i; fi;
                ((i++)); done
            failureThreshold: 6
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - MY_PROBE_CHECK_PATHS="http://localhost:8088/registrationprocessor/v1/packetvalidator/actuator/health,http://localhost:8089/registrationprocessor/v1/cmdvalidator/actuator/health,http://localhost:8093/registrationprocessor/v1/operatorvalidator/actuator/health,http://localhost:8094/registrationprocessor/v1/supervisorvalidator/actuator/health,http://localhost:8095/registrationprocessor/v1/introducervalidator/actuator/health";
                i=1; for str in $(echo $MY_PROBE_CHECK_PATHS | sed "s/,/\n/g"); do curl_output="$(curl
                -w %{http_code} -o /dev/null -s $str)"; if ! [ "$curl_output" = "200" ]; then
                echo "$str failed with status code $curl_output" >> /dev/stderr && exit $i; fi;
                ((i++)); done
            failureThreshold: 6
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
